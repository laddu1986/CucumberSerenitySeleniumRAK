#parse("/array.java.vm")
#if ($packageName)
package $packageName;

#end
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.runner.RunWith;
import com.cucumber.listener.ExtentProperties;
import cucumber.api.CucumberOptions;
import cucumber.api.junit.Cucumber;
import com.cucumber.listener.Reporter;
import net.serenitybdd.cucumber.CucumberWithSerenity;
import com.github.mkolisnyk.cucumber.runner.ExtendedCucumber;
import com.github.mkolisnyk.cucumber.runner.ExtendedCucumberOptions;
import com.github.mkolisnyk.cucumber.runner.ExtendedParallelCucumber;
import cucumber.api.SnippetType;

import java.io.File;

@RunWith(CucumberWithSerenity.class)
@CucumberOptions(
        strict = $strict,
        features = {"$featureFile"},
        plugin = #stringArray($plugins,"com.cucumber.listener.ExtentCucumberFormatter:"),//,"json:target/cucumber.json"),
        snippets=SnippetType.CAMELCASE,
        format = {"pretty","html:target/site/cucumber-pretty","json:target/cucumber.json"},
        monochrome = $monochrome,
#if(!$featureFile.contains(".feature:") && $tags)
        tags = #stringArray($tags),
#end
        glue = #stringArray($glue))
public class $className {

    @BeforeClass
    public static void beforeClass(){
      //Do things
       ExtentProperties extentProperties = ExtentProperties.INSTANCE;
       extentProperties.setReportPath("output/myreport.html");

    }

    @AfterClass
    public static void afterClass(){
      Reporter.loadXMLConfig(new File("src/test/resources/extent-config.xml"));
      Reporter.setSystemInfo("user", System.getProperty("user.name"));
      Reporter.setSystemInfo("os", "Mac OSX");
      Reporter.setTestRunnerOutput("Test runner output message");
      Reporter.getExtentHtmlReport().setAppendExisting(true);

    }
}